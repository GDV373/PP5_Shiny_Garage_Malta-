# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTe():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_wishlist(self):
    self.driver.get("https://shinygaragemalta-594b33247f63.herokuapp.com/")
    self.driver.set_window_size(1549, 646)
    self.driver.find_element(By.ID, "Cleaning-Products-link").click()
    self.driver.find_element(By.LINK_TEXT, "All Cleaning Products").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-sm-6:nth-child(6) .card-img-top").click()
    self.driver.find_element(By.CSS_SELECTOR, "#user-options-id .my-0").click()
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    #Username and Password need to be changed to use automated testing
    self.driver.find_element(By.ID, "id_login").send_keys("Test")
    self.driver.find_element(By.ID, "id_password").send_keys("Test1234")
    self.driver.find_element(By.ID, "id_login").click()
    self.driver.find_element(By.ID, "id_login").click()
    element = self.driver.find_element(By.ID, "id_login")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "id_password").click()
    self.driver.find_element(By.ID, "id_password").click()
    element = self.driver.find_element(By.ID, "id_password")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".primaryAction").click()
    self.driver.find_element(By.ID, "acessories-link").click()
    self.driver.find_element(By.LINK_TEXT, "All Acessories").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-sm-6:nth-child(6) .card-img-top").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ml-2").click()
    self.driver.find_element(By.CSS_SELECTOR, "#user-options-id .my-0").click()
    self.driver.find_element(By.LINK_TEXT, "Wish List").click()
    self.driver.find_element(By.ID, "id_qty_85").send_keys("2")
    self.driver.find_element(By.ID, "id_qty_85").click()
    self.driver.find_element(By.ID, "id_qty_85").send_keys("3")
    self.driver.find_element(By.ID, "id_qty_85").click()
    element = self.driver.find_element(By.ID, "id_qty_85")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    self.driver.find_element(By.ID, "acessories-link").click()
    self.driver.find_element(By.LINK_TEXT, "All Acessories").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-sm-6:nth-child(1) .card-img-top").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ml-2").click()
    self.driver.find_element(By.CSS_SELECTOR, "#user-options-id .my-0").click()
    self.driver.find_element(By.LINK_TEXT, "Wish List").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-12:nth-child(2) form > .btn").click()
  
